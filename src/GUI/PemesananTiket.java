/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class PemesananTiket extends javax.swing.JFrame {

    /**
     * Creates new form PemesananTiket
     */
    public PemesananTiket() {
        initComponents();
        setLocationRelativeTo(null);
        muatDataKotaDariDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfNik = new javax.swing.JTextField();
        tfTelepon = new javax.swing.JTextField();
        tfNama = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbKota1 = new javax.swing.JComboBox<>();
        cmbKota2 = new javax.swing.JComboBox<>();
        cmbTiket = new javax.swing.JComboBox<>();
        tfJumlah = new javax.swing.JTextField();
        lblCari = new javax.swing.JLabel();
        lblJadwal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblJadwal = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tfIdJadwal = new javax.swing.JTextField();
        tfTotalHarga = new javax.swing.JTextField();
        tfPesawat = new javax.swing.JTextField();
        tfJamTerbang = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        lblPesan = new javax.swing.JLabel();
        lblCancel = new javax.swing.JLabel();
        lblCetak = new javax.swing.JLabel();
        tfTgl = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transaksi");

        jPanel4.setBackground(new java.awt.Color(66, 135, 245));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/plane.png"))); // NOI18N
        jLabel2.setText("PEMESANAN TIKET");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/back.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(49, 48, 77));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Customer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("NIK");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nama Lengkap");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("No Telepon");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(tfNik, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfNik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(49, 48, 77));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transaksi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Jumlah");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Kota Awal");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Kota Tujuan");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Jenis Tiket");

        cmbTiket.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ekonomi", "Bisnis" }));

        lblCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/scan.png"))); // NOI18N
        lblCari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCariMouseClicked(evt);
            }
        });

        lblJadwal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/schedule.png"))); // NOI18N
        lblJadwal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblJadwalMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbKota1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbKota2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbTiket, 0, 152, Short.MAX_VALUE)
                    .addComponent(tfJumlah))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblJadwal)
                    .addComponent(lblCari))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cmbKota1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cmbKota2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbTiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCari, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblJadwal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Jadwal", "Maskapal", "Kota Awal", "Kota Tujuan", "Keberangkatan", "Kedatangan", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblJadwal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblJadwalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblJadwal);

        jPanel5.setBackground(new java.awt.Color(49, 48, 77));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Penerbangan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("ID Jadwal");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Nama Maskapai");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Total Harga");

        tfIdJadwal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tfIdJadwal.setEnabled(false);

        tfTotalHarga.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tfTotalHarga.setEnabled(false);

        tfPesawat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tfPesawat.setEnabled(false);

        tfJamTerbang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tfJamTerbang.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Jam Penerbangan");

        lblPesan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/ticketbuy.png"))); // NOI18N
        lblPesan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPesanMouseClicked(evt);
            }
        });

        lblCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/cancel.png"))); // NOI18N
        lblCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelMouseClicked(evt);
            }
        });
        lblCancel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                lblCancelComponentMoved(evt);
            }
        });

        lblCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/printer.png"))); // NOI18N
        lblCetak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCetakMouseClicked(evt);
            }
        });
        lblCetak.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                lblCetakComponentMoved(evt);
            }
        });

        tfTgl.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        tfTgl.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Tgl Transaksi");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(tfJamTerbang, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel17)
                            .addComponent(jLabel13))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfIdJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfPesawat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfTgl, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCancel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(tfTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblPesan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCetak)))
                .addGap(51, 51, 51))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(tfTgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfIdJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfPesawat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfJamTerbang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPesan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCetak, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void muatDataKotaDariDatabase() {
        String sql = "SELECT nama_kota FROM kota";
        try {
            Connection koneksi = config.configDB();
            PreparedStatement statemen = koneksi.prepareStatement(sql);
            ResultSet hasil = statemen.executeQuery();

            // Mengosongkan JComboBox
            cmbKota1.removeAllItems();
            cmbKota2.removeAllItems();

            while (hasil.next()) {
                String namaKota = hasil.getString("nama_kota");
                cmbKota1.addItem(namaKota);
                cmbKota2.addItem(namaKota);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error saat memuat data kota dari database: " + e.getMessage());
        }
    }
    
    private void muatDataJadwalByKota(String kotaAwal, String kotaTujuan) {
        String sql = "SELECT jadwal.id_jadwal, pesawat.nama_pesawat, jadwal.kota_awal, jadwal.kota_tujuan, jadwal.jam_berangkat, jadwal.jam_sampai, jadwal.harga FROM jadwal JOIN pesawat ON jadwal.id_pesawat = pesawat.id_pesawat WHERE kota_awal=? AND kota_tujuan=?";
        try {
            Connection koneksi = config.configDB();
            PreparedStatement statemen = koneksi.prepareStatement(sql);
            statemen.setString(1, kotaAwal);
            statemen.setString(2, kotaTujuan);
            ResultSet hasil = statemen.executeQuery();

            DefaultTableModel modelTabel = (DefaultTableModel) tblJadwal.getModel();

            // Hapus baris yang sudah ada
            modelTabel.setRowCount(0);

            while (hasil.next()) {
                Object[] data = {
                    hasil.getString("id_jadwal"),
                    hasil.getString("nama_pesawat"), // Mengambil nama pesawat
                    hasil.getString("kota_awal"),
                    hasil.getString("kota_tujuan"),
                    hasil.getString("jam_berangkat"),
                    hasil.getString("jam_sampai"),
                    hasil.getString("harga")
                };
                modelTabel.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error saat memuat data jadwal dari database: " + e.getMessage());
        }
    }
    
    private void hitungTotalHarga() {
        // Ambil harga dari tabel
        String hargaStr = tblJadwal.getValueAt(tblJadwal.getSelectedRow(), 6).toString();
        int harga = Integer.parseInt(hargaStr);

        // Ambil jumlah tiket dari tfJumlah
        int jumlahTiket = Integer.parseInt(tfJumlah.getText());

        // Ambil jenis tiket dari cmbTiket
        String jenisTiket = cmbTiket.getSelectedItem().toString();

        // Hitung total harga berdasarkan jenis tiket
        int totalHarga;
        if (jenisTiket.equals("Ekonomi")) {
            totalHarga = harga * jumlahTiket;
        } else {
            // Jika jenis tiket adalah "Bisnis", harganya dikali 2
            totalHarga = harga * jumlahTiket * 2;
        }

        // Tampilkan total harga di tfTotalHarga
        tfTotalHarga.setText(String.valueOf(totalHarga));
    }
    
    private void clearTable() {
        DefaultTableModel model = (DefaultTableModel) tblJadwal.getModel();
        model.setRowCount(0);
    }
    
    private String generateNextTransactionID() {
        String nextID = "";

        try {
            // Melakukan koneksi ke database
            Connection koneksi = config.configDB();

            // Mengambil ID transaksi terakhir dari database
            String sqlMaxID = "SELECT MAX(CAST(SUBSTRING(id_transaksi, 3) AS SIGNED)) AS maxID FROM transaksi";
            PreparedStatement statementMaxID = koneksi.prepareStatement(sqlMaxID);
            ResultSet resultMaxID = statementMaxID.executeQuery();

            if (resultMaxID.next()) {
                int numericPart = resultMaxID.getInt("maxID") + 1;

                // Format untuk TRxxx
                nextID = String.format("TR%03d", numericPart);
            } else {
                // Jika belum ada data transaksi, mulai dari TR001
                nextID = "TR001";
            }

            // Menutup resultMaxID, statementMaxID, dan koneksi ke database
            resultMaxID.close();
            statementMaxID.close();
            koneksi.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }

        return nextID;
    }
     
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void lblJadwalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblJadwalMouseClicked
        // Menampilkan dialog konfirmasi
        int dialogResult = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin berpindah ke halaman pencarian jadwal?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        // Memeriksa jawaban pengguna
        if (dialogResult == JOptionPane.YES_OPTION) {
            new DaftarJadwal().setVisible(true);
            dispose( );
        } else {
            
        }
    }//GEN-LAST:event_lblJadwalMouseClicked

    private void lblCariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCariMouseClicked
        // Ambil nilai dari input fields
        String kotaAwal = cmbKota1.getSelectedItem().toString();
        String kotaTujuan = cmbKota2.getSelectedItem().toString();

        // Cek apakah kota awal dan kota tujuan sama
        if (kotaAwal.equals(kotaTujuan)) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Kota Awal dan Kota Tujuan tidak boleh sama", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Hentikan eksekusi metode jika kota awal dan tujuan sama
        }

        // Memeriksa apakah data NIK, nama, dan telepon sudah diisi
        if (tfNik.getText().isEmpty() || tfNama.getText().isEmpty() || tfTelepon.getText().isEmpty()) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Mohon lengkapi data NIK, Nama, dan Nomor Telepon terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Menghentikan eksekusi selanjutnya jika data belum lengkap
        }

        // Cek apakah jumlah dan jenis tiket sudah diinput
        if (tfJumlah.getText().isEmpty() || cmbTiket.getSelectedIndex() == -1) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Masukkan Jumlah Tiket dan Pilih Jenis Tiket terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Menghentikan eksekusi selanjutnya jika jumlah atau jenis tiket belum diinput
        }

        // Cek apakah ada jadwal berdasarkan kota awal dan kota tujuan
        muatDataJadwalByKota(kotaAwal, kotaTujuan);

        // Tampilkan notifikasi jika tidak ada jadwal
        if (tblJadwal.getRowCount() == 0) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Jadwal Penerbangan Belum Ada", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_lblCariMouseClicked

    private void tblJadwalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblJadwalMouseClicked
        int dialogResult = JOptionPane.showConfirmDialog(this, "Apakah Anda ingin memilih Jadwal Penerbangan ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            // Cek apakah jumlah dan jenis tiket sudah diinput
            if (tfJumlah.getText().isEmpty() || cmbTiket.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Masukkan Jumlah Tiket dan Pilih Jenis Tiket terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return; // Menghentikan eksekusi selanjutnya jika jumlah atau jenis tiket belum diinput
            }

            int selectedRow = tblJadwal.getSelectedRow();

            if (selectedRow != -1) {
                String idJadwalTerpilih = tblJadwal.getValueAt(selectedRow, 0).toString();

                // Menampilkan data terpilih di dalam JTextField dan JComboBox
                tfIdJadwal.setText(idJadwalTerpilih);
                tfPesawat.setText(tblJadwal.getValueAt(selectedRow, 1).toString());
                String jamBerangkat = tblJadwal.getValueAt(selectedRow, 4).toString();
                String jamSampai = tblJadwal.getValueAt(selectedRow, 5).toString();
                tfJamTerbang.setText(jamBerangkat + " - " + jamSampai);

                // Menonaktifkan atau menyembunyikan komponen-komponen yang tidak boleh diubah
                tfJumlah.setEnabled(false);
                cmbKota1.setEnabled(false);
                cmbKota2.setEnabled(false);
                cmbTiket.setEnabled(false);
                tfNik.setEnabled(false);
                tfNama.setEnabled(false);
                tfTelepon.setEnabled(false);

                // Mengisi otomatis tanggal transaksi ke dalam tfTgl
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String tglTransaksi = dateFormat.format(new Date());
                tfTgl.setText(tglTransaksi);

                // Hitung total harga
                hitungTotalHarga();
            }
        }
    }//GEN-LAST:event_tblJadwalMouseClicked

    private void lblPesanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPesanMouseClicked
        // Mengambil nilai dari inputan
        String nik = tfNik.getText();
        String nama = tfNama.getText();
        String telepon = tfTelepon.getText();
        String jumlah = tfJumlah.getText();
        String jenisTiket = (String) cmbTiket.getSelectedItem();
        String idJadwal = tfIdJadwal.getText();
        String namaPesawat = tfPesawat.getText(); // Menggunakan Nama pesawat
        String jamTerbang = tfJamTerbang.getText();
        String totalHarga = tfTotalHarga.getText();
        String tglTransaksi = tfTgl.getText(); 
        String kotaAwal = (String) cmbKota1.getSelectedItem();
        String kotaTujuan = (String) cmbKota2.getSelectedItem();

        try {
            // Melakukan koneksi ke database
            Connection koneksi = config.configDB();

            // Menggunakan fungsi generateNextTransactionID untuk mendapatkan ID transaksi berikutnya
            String idTransaksi = generateNextTransactionID();

            // Menemukan id_pesawat berdasarkan nama_pesawat
            String sqlCariPesawat = "SELECT id_pesawat FROM pesawat WHERE nama_pesawat=?";
            PreparedStatement statementCariPesawat = koneksi.prepareStatement(sqlCariPesawat);
            statementCariPesawat.setString(1, namaPesawat);
            ResultSet resultCariPesawat = statementCariPesawat.executeQuery();

            // Jika nama_pesawat ditemukan, lanjutkan proses penyimpanan
            if (resultCariPesawat.next()) {
                String idPesawat = resultCariPesawat.getString("id_pesawat");

                // Menggunakan ID transaksi yang telah di-generate
                String sql = "INSERT INTO transaksi (id_transaksi, tgl_transaksi, id_jadwal, id_pesawat, kota_awal, kota_tujuan, jam_terbang, nik, nama, telepon, jumlah, jenis, total) "
                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement statement = koneksi.prepareStatement(sql);
                statement.setString(1, idTransaksi);
                statement.setString(2, tglTransaksi);
                statement.setString(3, idJadwal);
                statement.setString(4, idPesawat); // Menggunakan ID pesawat
                statement.setString(5, kotaAwal);
                statement.setString(6, kotaTujuan);
                statement.setString(7, jamTerbang);
                statement.setString(8, nik);
                statement.setString(9, nama);
                statement.setString(10, telepon);
                statement.setString(11, jumlah);
                statement.setString(12, jenisTiket);
                statement.setString(13, totalHarga);

                // Mengeksekusi pernyataan SQL untuk memasukkan data ke dalam tabel
                int rowsInserted = statement.executeUpdate();
                if (rowsInserted > 0) {
                    // Notifikasi pembayaran
                    String inputPembayaran = JOptionPane.showInputDialog(this, "Pembayaran Total Harga: " + totalHarga + "\nMasukkan Jumlah Uang Tunai:");

                    // Memeriksa apakah pengguna memasukkan nilai atau membatalkan
                    if (inputPembayaran != null && !inputPembayaran.isEmpty()) {
                        try {
                            double jumlahUangTunai = Double.parseDouble(inputPembayaran);

                            // Memeriksa apakah pembayaran mencukupi
                            if (jumlahUangTunai >= Double.parseDouble(totalHarga)) {
                                getToolkit().beep();
                                JOptionPane.showMessageDialog(this, "Pembayaran Berhasil!\nData transaksi berhasil disimpan!");

                                // Membersihkan komponen input setelah berhasil menyimpan
                                tfNik.setText("");
                                tfNama.setText("");
                                tfTelepon.setText("");
                                tfJumlah.setText("");
                                cmbTiket.setSelectedIndex(0);
                                tfTgl.setText("");
                                tfIdJadwal.setText("");
                                tfPesawat.setText("");
                                tfJamTerbang.setText("");
                                tfTotalHarga.setText("");
                                cmbKota1.setSelectedIndex(0);
                                cmbKota2.setSelectedIndex(0);

                                // Menonaktifkan atau mengaktifkan kembali komponen yang perlu diatur
                                tfJumlah.setEnabled(true);
                                cmbTiket.setEnabled(true);
                                tfNik.setEnabled(true);
                                tfNama.setEnabled(true);
                                tfTelepon.setEnabled(true);
                                cmbKota1.setEnabled(true);
                                cmbKota2.setEnabled(true);

                                // Membersihkan data dalam tabel
                                clearTable();

                            } else {
                                getToolkit().beep();
                                JOptionPane.showMessageDialog(this, "Pembayaran Tidak Cukup!");
                            }
                        } catch (NumberFormatException e) {
                            getToolkit().beep();
                            JOptionPane.showMessageDialog(this, "Masukkan Jumlah Uang Tunai dengan benar!");
                        }
                    } else {
                        // Pembayaran dibatalkan, data tidak disimpan
                        JOptionPane.showMessageDialog(this, "Pembayaran dibatalkan. Data transaksi tidak disimpan.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menyimpan data transaksi");
                }
            } else {
                getToolkit().beep();
                JOptionPane.showMessageDialog(this, "Data belum lengkap, Silahkan isi terlebih dahulu");
            }

            // Menutup koneksi ke database
            koneksi.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_lblPesanMouseClicked

    private void lblCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseClicked
         // Membersihkan atau mereset semua data yang telah diinput sebelumnya
        tfNik.setText("");
        tfNama.setText("");
        tfTelepon.setText("");
        tfJumlah.setText("");
        tfTgl.setText("");
        tfIdJadwal.setText("");
        tfPesawat.setText("");
        tfJamTerbang.setText("");
        tfTotalHarga.setText("");
        cmbKota1.setSelectedIndex(0);
        cmbKota2.setSelectedIndex(0);
        cmbTiket.setSelectedIndex(0);

        // Menonaktifkan atau mengaktifkan kembali komponen yang perlu diatur
        tfJumlah.setEnabled(true);
        cmbTiket.setEnabled(true);
        tfNik.setEnabled(true);
        tfNama.setEnabled(true);
        tfTelepon.setEnabled(true);
        cmbKota1.setEnabled(true);
        cmbKota2.setEnabled(true);
        
        // Membersihkan data dalam tabel
        clearTable();
    }//GEN-LAST:event_lblCancelMouseClicked

    private void lblCancelComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lblCancelComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCancelComponentMoved

    private void lblCetakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCetakMouseClicked
        new LaporanTiket().setVisible(true);
        dispose();
    }//GEN-LAST:event_lblCetakMouseClicked

    private void lblCetakComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lblCetakComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCetakComponentMoved

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PemesananTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PemesananTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PemesananTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PemesananTiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PemesananTiket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbKota1;
    private javax.swing.JComboBox<String> cmbKota2;
    private javax.swing.JComboBox<String> cmbTiket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCancel;
    private javax.swing.JLabel lblCari;
    private javax.swing.JLabel lblCetak;
    private javax.swing.JLabel lblJadwal;
    private javax.swing.JLabel lblPesan;
    private javax.swing.JTable tblJadwal;
    private javax.swing.JTextField tfIdJadwal;
    private javax.swing.JTextField tfJamTerbang;
    private javax.swing.JTextField tfJumlah;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNik;
    private javax.swing.JTextField tfPesawat;
    private javax.swing.JTextField tfTelepon;
    private javax.swing.JTextField tfTgl;
    private javax.swing.JTextField tfTotalHarga;
    // End of variables declaration//GEN-END:variables
}
